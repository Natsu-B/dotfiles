# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left j
set $down k
set $up i
set $right l

#set color
set $bg             #a48abfcc
set $bg-inactive    #120e1200
set $bg-urgent      #d9236588
set $text-light     #f2d8e988
set $text-dark      #0b0b0b88
set $text-inactive  #59485088
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wofi -d | xargs swaymsg exec --

# start sway systemd target
exec_always "systemctl --user start sway-session.target"

# set inner and outer gaps
gaps outer 3
gaps inner 15
default_border pixel 3

# set color theme
# class                 border        bground       text        indicator     child_border
client.focused          $bg           $bg           $text-dark  $bg           $bg
client.focused_inactive $bg-inactive  $bg-inactive  $text-light $bg-inactive  $bg-inactive
client.unfocused        $bg-inactive  $bg-inactive  $text-light $bg-inactive  $bg-inactive
client.urgent           $bg-urgent    $bg-urgent    $text-light $bg-urgent    $bg-urgent
client.placeholder      $bg-inactive  $bg-inactive  $text-light $bg-inactive  $bg-inactive

# set xkeyboard layout
input * {
  xkb_layout "us,ru,hr"
  xkb_model "jp106"
  xkb_options "grp:win_space_toggle"
}

# define status bar
bar {
  swaybar_command waybar
}

## background services

# XWayland config daemon
exec xsettingsd

# polkit
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1;

# geoclue
exec /usr/lib/geoclue2-1-pantheon/pantheon-agent-geoclue2

# start other background apps

# get display info (brightness, etc...)
# exec ddccontrol -p
# notification
exec swaync
# input system
exec fcitx5 -d
# exec ibus-daemon -d
# clipboard manager
exec wl-paste --watch cliphist store
# media controller
exec playerctld daemon
# sound equalizer
exec "sleep 3; easyeffects --gapplication-service"

# start screenlocker
exec swayidle -w \
  timeout 600 'env LANG=en.US_UTF-8 swaylock -f' \
  timeout 1200 'swaymsg "output * power off"' \
  resume 'swaymsg "output * power on"' \
  before-sleep 'env LANG=en.US_UTF-8 swaylock -f' \

# timeout 1100 'systemctl start --user ai-haxibami.service' \
# && systemctl stop --user ai-haxibami.service

# start auto-tiling
exec autotiling-rs
exec wl-mpris-idle-inhibit

# start applets
exec thunar --daemon
#exec iwgtk -i
#exec tailscale-systray
exec "sleep 3; trayscale --gapplication-service"
exec "sleep 3; meteo-qt"
exec blueman-applet
# exec waylyrics

# set cursor theme
seat seat0 xcursor_theme Bibata-Original-Classic 36

# set volume/brightness bar
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec mkfifo $WOBSOCK && tail -f $WOBSOCK | wob
exec avizo-service

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # media controls
    # TODO
    # output
    bindsym XF86AudioRaiseVolume exec volumectl -u up
    bindsym XF86AudioLowerVolume exec volumectl -u down
    bindsym XF86AudioMute exec volumectl exec volumectl -u toggle-mute
    # input
    bindsym XF86AudioRaiseVolume+shift exec volumectl -u -m up
    bindsym XF86AudioLowerVolume+shift exec volumectl -u -m down
    bindsym XF86AudioMute+shift exec volumectl -u -m toggle-mute

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+space exec $menu

    # open notification

    bindsym $mod+Shift+n exec swaync-client -t -sw

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec wleave

    # floating window
    for_window [app_id="qt5ct" title="Qt5 設定ツール"] {
  floating enable
}

for_window [app_id="fcitx5" title="Fcitx の設定"] {
  floating enable
}

for_window [app_id="blueman-manager"] {
  floating enable
}

for_window [class="flameshot" title="設定"] {
  floating enable
}

for_window [class="XEyes" title="xeyes"] {
  floating enable
}

for_window [app_id="showmethekey-gtk" title="Floating Window - Show Me The Key"] {
  floating enable
  sticky enable
  move down 950 px
  move right 1610 px
}

for_window [app_id="one.alynx.showmethekey"] {
  floating enable
}

for_window [app_id="zoom" title="zoom"] {
  floating enable
}

for_window [class="zoom" title="zoom"] {
  floating enable
}

for_window [app_id="zoom" title="Zoom"] {
  floating enable
}

for_window [class="zoom" title="Zoom"] {
  floating enable
}

for_window [app_id="zoom" title="設定"] {
  floating enable
  resize set 3000 1500
}

for_window [class="zoom" title="設定"] {
  floating enable
  resize set 3000 1500
}

for_window [app_id="zoom" title="zoom_linux_float_message_reminder"] {
  floating enable
  sticky enable
  move down 900 px
  move right 1575 px
  border none
}

for_window [class="zoom" title="zoom_linux_float_message_reminder"] {
  floating enable
  sticky enable
  move down 900 px
  move right 1575 px
  border none
}

# for_window [app_id="zoom" title="Zoom - 許可取得済のアカウント"] {
#   floating disable
# }
# 
# for_window [class="zoom" title="Zoom - 許可取得済のアカウント"] {
#   floating disable
# }

for_window [app_id="zoom" title="Zoom ミーティング"] {
  floating disable
}

for_window [class="zoom" title="Zoom ミーティング"] {
  floating disable
}

for_window [app_id="zoom" title="Zoom ウェビナー"] {
  floating disable
}

for_window [class="zoom" title="Zoom ウェビナー"] {
  floating disable
}

for_window [app_id="zoom" title="^参加者"] {
  floating enable
  resize set 3000 1500
}

for_window [class="zoom" title="^参加者"] {
  floating enable
  resize set 3000 1500
}

for_window [app_id="zoom" title="as_toolbar"] {
  floating enable
  move up 1050 px
  move left 750 px
}

for_window [app_id="zoom" title="レコーディング アラート"] {
  floating enable
}

for_window [class="zoom" title="レコーディング アラート"] {
  floating enable
}

# for_window [app_id="zoom" title="詳細情報"] {
#   floating enable
# }
# 
# for_window [class="zoom" title="詳細情報"] {
#   floating enable
# }

for_window [app_id="meteo-qt.python3"] {
  floating enable
}

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # copy
    # windows like screenshot
    bindsym $mod+shift+s exec grimshot --notify copy area | wl-paste -t image/png > ~/Pictures/Screenshots/$(date "+%Y%m%d-%H%M%S")'_grim_area.png'
    #show cilpborad history
    bindsym $mod+v exec clipman pick -t wofi
    #lock screen
    bindsym $mod+l exec ~/.bin/swaylight.sh
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# media mode
mode "media" {
        # These bindings trigger as soon as you enter the resize mode

        # record screen
        bindsym r exec ~/.bin/swayrec.sh

        # cast screen as dummy camera
        bindsym Mod1+r exec ~/.bin/swayscrshare.sh # obs(-cli)

        # set default sink & sources
        bindsym d exec ~/.bin/swaypulse.sh # choose pipewire-pulse device (input & output)
        bindsym p exec ~/.bin/swaypulseprof.sh # choose card profile (ex. analog vs. HDMI)
        bindsym c exec hyprpicker -a

        # back to normal
        bindsym $mod+g mode "default"
}

bindsym $mod+g mode "media"

include /etc/sway/config.d/*
